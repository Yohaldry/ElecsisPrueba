{"version":3,"sources":["app/views/sessions/login/JwtLogin.jsx"],"names":["FlexBox","styled","Box","display","alignItems","JustifyBox","justifyContent","ContentBox","height","padding","position","background","IMG","width","JWTRoot","minHeight","maxWidth","borderRadius","margin","StyledProgress","CircularProgress","top","left","JwtLogin","useState","usuarios","setUsuarios","email","curre","setCurre","obtenerDatos","a","fetch","data","json","users","navigate","useNavigate","loading","userInfo","console","log","message","palette","useAuth","login","useTheme","textError","error","main","handleFormSubmit","primary","find","U","Swal","fire","icon","title","showConfirmButton","timer","useEffect","className","container","item","lg","md","sm","xs","p","src","alt","onSubmit","sx","mb","variant","size","label","onChange","e","target","name","value","type","color","flexWrap","disabled","mr","ml","textTransform","onClick"],"mappings":"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","file":"static/js/35.78f1f6ce.chunk.js","sourcesContent":["import {\r\n    Card,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    CircularProgress,\r\n    FormControlLabel,\r\n} from '@mui/material'\r\nimport React, { useState } from 'react'\r\nimport useAuth from 'app/hooks/useAuth'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { Box, styled, useTheme } from '@mui/system'\r\nimport { TextValidator, ValidatorForm } from 'react-material-ui-form-validator'\r\nimport { Paragraph, Span } from 'app/components/Typography'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n}))\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n    justifyContent: 'center',\r\n}))\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n    height: '100%',\r\n    padding: '32px',\r\n    position: 'relative',\r\n    background: 'rgba(0, 0, 0, 0.01)',\r\n}))\r\n\r\nconst IMG = styled('img')(() => ({\r\n    width: '100%',\r\n}))\r\n\r\nconst JWTRoot = styled(JustifyBox)(() => ({\r\n    background: '#1A2038',\r\n    minHeight: '100% !important',\r\n    '& .card': {\r\n        maxWidth: 800,\r\n        borderRadius: 12,\r\n        margin: '1rem',\r\n    },\r\n}))\r\n\r\nconst StyledProgress = styled(CircularProgress)(() => ({\r\n    position: 'absolute',\r\n    top: '6px',\r\n    left: '25px',\r\n}))\r\n\r\nconst JwtLogin = () => {\r\n\r\n    const [usuarios, setUsuarios] = useState([])\r\n    \r\n \r\n    const urlLogin = `https://gorest.co.in/public/v2/users`\r\n\r\n\r\n    const [curre, setCurre] = useState({\r\n\r\n     \r\n        email: ''\r\n        \r\n    })\r\n    \r\n\r\n    const handleChange = (e) => {\r\n\r\n        setCurre({\r\n            ...curre, \r\n            [e.target.name]: e.target.value\r\n        })\r\n        \r\n        console.log(curre)\r\n    }\r\n\r\n   \r\n\r\n     const obtenerDatos = async () => {\r\n         const data = await fetch(urlLogin)\r\n         const users = await data.json()\r\n         setUsuarios(users)\r\n         \r\n     }\r\n\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState(false)\r\n    const [userInfo, setUserInfo] = useState({})\r\n    console.log(userInfo)\r\n    const [message, setMessage] = useState('')\r\n    const { login } = useAuth()\r\n\r\n \r\n\r\n    const { palette } = useTheme()\r\n    const textError = palette.error.main\r\n    const textPrimary = palette.primary.main\r\n\r\n\r\n\r\n    const handleFormSubmit = async () => {\r\n    \r\n       \r\n        usuarios.find(U => {\r\n            \r\n            if(curre.email === U.email){\r\n                \r\n                Swal.fire({\r\n                    position: 'center',\r\n                    icon: 'success',\r\n                    title: 'Welcome',\r\n                    showConfirmButton: false,\r\n                    timer: 2500\r\n                  })\r\n\r\n                    navigate('/tableUsuarios')\r\n            }else{\r\n               console.log('No existe')\r\n            }\r\n          \r\n        } )\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n        obtenerDatos()\r\n     \r\n    },[])\r\n\r\n\r\n    return (\r\n        <JWTRoot>\r\n            <Card className=\"card\">\r\n                <Grid container>\r\n                    <Grid item lg={5} md={5} sm={5} xs={12}>\r\n                        <JustifyBox p={4} height=\"100%\">\r\n                            <IMG\r\n                                src=\"/assets/images/illustrations/dreamer.svg\"\r\n                                alt=\"\"\r\n                            />\r\n                        </JustifyBox>\r\n                    </Grid>\r\n                    <Grid item lg={7} md={7} sm={7} xs={12}>\r\n                        <ContentBox>\r\n                            <ValidatorForm onSubmit={handleFormSubmit}>\r\n                                <TextValidator\r\n                                    sx={{ mb: 3, width: '100%' }}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label=\"email\"\r\n                                    onChange={handleChange}\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    // value={userInfo.email}\r\n                                   \r\n                                />\r\n                        \r\n                                \r\n\r\n                                {message && (\r\n                                    <Paragraph sx={{ color: textError }}>\r\n                                        {message}\r\n                                    </Paragraph>\r\n                                )}\r\n\r\n                                <FlexBox mb={2} flexWrap=\"wrap\">\r\n                                    <Box position=\"relative\">\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            disabled={loading}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Sign in\r\n                                        </Button>\r\n                                        {loading && (\r\n                                            <StyledProgress\r\n                                                size={24}\r\n                                                className=\"buttonProgress\"\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                    <Span sx={{ mr: 1, ml: '20px' }}>or</Span>\r\n                                    <Button\r\n                                        sx={{ textTransform: 'capitalize' }}\r\n                                        onClick={() =>\r\n                                            navigate('/register')\r\n                                        }\r\n                                    >\r\n                                        Sign up\r\n                                    </Button>\r\n                                </FlexBox>\r\n                              \r\n                            </ValidatorForm>\r\n                        </ContentBox>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </JWTRoot>\r\n    )\r\n}\r\n\r\nexport default JwtLogin\r\n"],"sourceRoot":""}